pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:

- script: dotnet build -c $(buildConfiguration)
  displayName: 'Build project'

- script: dotnet pack -c $(buildConfiguration)
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), ne(variables['Build.Reason'], 'PullRequest'))
  displayName: 'Create nupkg'

- task: CopyFiles@2
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), ne(variables['Build.Reason'], 'PullRequest'))
  inputs:
    contents: '**\*.nupkg'
    targetFolder: $(Build.ArtifactStagingDirectory)
    cleanTargetFolder: true
    overWrite: true
  displayName: 'Copy nuget package to artifact staging'

- task: PublishBuildArtifacts@1
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), ne(variables['Build.Reason'], 'PullRequest'))
  displayName: 'Publish artifacts'

- task: NuGetCommand@2
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), ne(variables['Build.Reason'], 'PullRequest'))
  inputs:
    command: push
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: 'Nuget'